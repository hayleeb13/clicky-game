{"version":3,"sources":["components/CharacterCard/index.js","components/Title/index.js","components/Wrapper/index.js","components/Nav/index.js","components/Footer/index.js","App.js","index.js"],"names":["CharacterCard","_ref","id","image","onClick","react_default","a","createElement","className","src","alt","Title","props","Wrapper","children","Nav","href","message","score","topScore","Footer","containerStyle","display","flexDirection","width","flexWrap","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","characters","maxScore","shuffle","array","temp","random","current","length","Math","floor","correctSelection","setState","resetAfterWin","currentCharacters","map","character","objectSpread","isClicked","incorrectSelection","handleShuffle","reset","displayCharacters","components_CharacterCard","key","bind","assertThisInitialized","components_Wrapper","components_Nav","components_Title","style","components_Footer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3d0838ad.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nconst CharacterCard = ({id, image, onClick}) =>\n<div className=\"card\">\n  <div className=\"img-container\">\n  <img\n    src={image}\n    alt={id}\n    id={id}\n    onClick={ () => onClick(id) }\n  />;\n  </div>\n</div>\nexport default CharacterCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (<div className=\"jumbotron text-center\">\n  <h1>Clicky Game!</h1>\n  <br></br>\n  <h2>Click on an image to earn points, but don't click on any more than once!</h2>\n  \n</div>\n  );\n}\n\nexport default Title;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Nav(props) {\n  return (\n    <nav className=\"navbar\">\n      <ul>\n        <li className=\"brand\">\n          <a href=\"/\">Clicky Game</a>\n        </li>\n        <li className=\"\"> {props.message} </li>\n        <li>Score: {props.score} | Top Score: {props.topScore}</li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\"><div className=\"bottom\">Clicky Game!</div></footer>\n  );\n}\n\nexport default Footer;","import React, { Component } from \"react\";\nimport CharacterCard from \"./components/CharacterCard\";\nimport Title from \"./components/Title\";\nimport characters from \"./characters.json\";\nimport Wrapper from \"./components/Wrapper\";\nimport Nav from \"./components/Nav\";\nimport Footer from \"./components/Footer\";\n\nvar containerStyle = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  width: \"100%\",\n  flexWrap: \"wrap\"\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.handleShuffle = this.handleShuffle.bind(this);\n  }\n\n  state = {\n    characters: characters,\n    score: 0,\n    topScore: 0,\n    maxScore: 12,\n    message: \"Click an image to begin!\"\n  };\n\n  shuffle = array => {\n    let current = array.length;\n    let temp;\n    let random;\n    while (current) {\n      random = Math.floor(Math.random() * current--);\n      temp = array[current];\n      array[current] = array[random];\n      array[random] = temp;\n    }\n    return array;\n  };\n\n  correctSelection = () => {\n    if (this.state.score + 1 > this.state.topScore) {\n      this.setState({ topScore: this.state.topScore + 1 });\n    } else {\n      this.setState({\n        score: this.state.score + 1,\n        message: \"You guessed correctly!\"\n      });\n    }\n  };\n\n  resetAfterWin = currentCharacters => {\n    if (this.state.score + 1 === this.state.maxScore) {\n      this.setState({ score: 0 });\n      const updatedCharacters = currentCharacters.map(character =>\n        true ? { ...character, isClicked: false } : character\n      );\n      return updatedCharacters;\n    } else {\n      return currentCharacters;\n    }\n  };\n\n  incorrectSelection = () => {\n    this.setState({ score: 0, message: \"You guessed incorrectly!\" });\n    const updatedCharacters = this.state.characters.map(character =>\n      character.isClicked === true\n        ? { ...character, isClicked: false }\n        : character\n    );\n    return updatedCharacters;\n  };\n\n  handleShuffle = id => {\n    var reset = false;\n    const characters = this.state.characters.map(character => {\n      if (character.id === id) {\n        if (character.isClicked === false) {\n          this.correctSelection();\n          return { ...character, isClicked: true };\n        } else {\n          reset = true;\n          return { ...character, isClicked: false };\n        }\n      }\n      return character;\n    });\n    if (reset) {\n      this.setState({\n        characters: this.shuffle(this.incorrectSelection()),\n        message: \"You guessed incorrectly!\"\n      });\n    } else {\n      this.setState({\n        characters: this.shuffle(this.resetAfterWin(characters))\n      });\n    }\n  };\n\n  displayCharacters = () => {\n    return this.state.characters.map(character => (\n      <CharacterCard\n        id={character.id}\n        key={character.id}\n        image={character.image}\n        onClick={this.shuffle}\n      />\n    ));\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Nav \n        score={this.state.score}\n        topScore={this.state.topScore}\n        message={this.state.message}\n        />\n        <Title />\n        <div style={containerStyle}>{this.displayCharacters()}</div>\n        <Footer />\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}